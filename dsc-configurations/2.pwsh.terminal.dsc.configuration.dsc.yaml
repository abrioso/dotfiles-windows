# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2
properties:
  configurationVersion: 0.2.0
  ########################################
  ### ASSERTIONS: System Requirements
  ########################################
  assertions:
    ### Assertion: OS Version
    ### -------------------------------------
    - resource: Microsoft.Windows.Developer/OsVersion
      id: OsVersion
      directives:
        description: Minimum OS version requirement
        allowPrerelease: true
      settings:
        MinVersion: "10.0.22000"
  ########################################
  resources:
    ########################################
    ### Initialization
    ########################################
    ########################################
    ### Create Powershell Profile directory
    ### -------------------------------------
    - resource: PSDscResources/Script
      id: powershellprofiledir
      directives:
        description: Create Powershell Profile directory
      settings:
        SetScript: |
          # Get the directory of the PowerShell profile
          $profileDirectory = Split-Path -Parent $PROFILE
          # Ensure the directory exists
          if (-not (Test-Path $profileDirectory)) {
              New-Item -ItemType Directory -Path $profileDirectory | Out-Null
          }
        GetScript: return $false
        TestScript: return $false
    ########################################
    ### Install Powershell
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Powershell
      directives:
        description: Install Powershell
        allowPrerelease: true
      settings:
        id: Microsoft.PowerShell
        source: winget
    ########################################
    ### Install Windows Terminal
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: WindowsTerminal
      directives:
        description: Install Windows Terminal
        allowPrerelease: true
      settings:
        id: Microsoft.WindowsTerminal
        source: winget
    ########################################
    ### Install Oh My Posh
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: ohmyposh
      directives:
        description: Install Oh My Posh
        allowPrerelease: true
      dependsOn:
        - Powershell
      settings:
        id: JanDeDobbeleer.OhMyPosh
        source: winget
    ########################################
    ### Install Github CLI
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: githubcli
      directives:
        description: Install Github CLI
        allowPrerelease: true
      dependsOn:
        - Powershell
      settings:
        id: GitHub.cli
        source: winget
    ########################################
    ### Install gsudo
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: gsudo
      directives:
        description: Install gsudo
        allowPrerelease: true
      dependsOn:
        - Powershell
      settings:
        id: gerardog.gsudo
        source: winget
    ########################################
    ### Configure settings
    ########################################
    ########################################
    ### Copy Powershell Profiles
    ### -------------------------------------
    - resource: PSDscResources/Script
      id: powershellprofiles
      dependsOn:
       - powershellprofiledir
      directives:
       description: Copy Powershell Profiles
      settings:
       SetScript: |
        # Get the directory of the PowerShell profile
        $powershellProfilePath = Split-Path -Parent $PROFILE
        # Get the dotfiles directory
        $dotfilesPowershellProfilesDirectory = "$env:USERPROFILE\workspace\dotfiles-windows\powershell-profiles"
        $files = Get-ChildItem -Path $dotfilesPowershellProfilesDirectory -Filter "*.ps1"
        foreach ($file in $files) {
          $destination = Join-Path -Path $powershellProfilePath -ChildPath $file.Name
          Copy-Item -Path $file.FullName -Destination $destination
        }
       GetScript: return $false
       TestScript: return $false
    ########################################
    ### Copy Oh My Posh Custom Themes
    ### -------------------------------------
    - resource: PSDscResources/Script
      id: customompthemes
      dependsOn:
       - powershellprofiledir
      directives:
       description: Copy custom oh-my-posh Themes
      settings:
       SetScript: |
        # Get oh my posh directory
        $ohMyPoshDirectory = "$env:USERPROFILE\.config\oh-my-posh\poshthemes"
        # Ensure the directory exists
        if (-not (Test-Path $ohMyPoshDirectory)) {
            New-Item -ItemType Directory -Path $ohMyPoshDirectory | Out-Null
        }
        # Get the dotfiles directory
        $dotfilesPoshDirectory = "$env:USERPROFILE\workspace\dotfiles-windows\poshthemes"
        $files = Get-ChildItem -Path $dotfilesPoshDirectory -Filter "*.omp.json"
        foreach ($file in $files) {
          $destination = Join-Path -Path $ohMyPoshDirectory -ChildPath $file.Name
          Copy-Item -Path $file.FullName -Destination $destination
        }
       GetScript: return $false
       TestScript: return $false
    ########################################
    ### Download and Install a Nerd Font
    ### -------------------------------------
    - resource: PSDscResources/Script
      id: nerdFont
      directives:
        description: Download and Install a Nerd Font (via oh-my-posh)
      settings:
        SetScript: |
          oh-my-posh font install CascadiaCode
        GetScript: return $false
        TestScript: return $false
    ########################################
    ### Install Terminal-Icons
    ### -------------------------------------
    - resource: PSDscResources/Script
      id: terminalIcons
      directives:
        description: Install Terminal-Icons
      settings:
        SetScript: |
          # Install Terminal-Icons
          Install-Module -Name Terminal-Icons
        GetScript: return $false
        TestScript: return $false
    ########################################
    ### Copy Windows Terminal Settings
    ### -------------------------------------
    - resource: PSDscResources/Script
      id: windowsTerminalSettings
      dependsOn:
       - powershellprofiledir
      directives:
       description: Copy Windows Terminal Settings
      settings:
       SetScript: |
        # Get the directory of the Windows Terminal settings
        $windowsTerminalSettingsPath = "$env:LOCALAPPDATA\Packages\Microsoft.WindowsTerminal_8wekyb3d8bbwe\LocalState"
        # Get the dotfiles directory
        $dotfilesWindowsTerminalSettingsDirectory = "$env:USERPROFILE\workspace\dotfiles-windows\windows-terminal-settings"
        $files = Get-ChildItem -Path $dotfilesWindowsTerminalSettingsDirectory -Filter "*.json"
        foreach ($file in $files) {
          $destination = Join-Path -Path $windowsTerminalSettingsPath -ChildPath $file.Name
          Copy-Item -Path $file.FullName -Destination $destination
        }
       GetScript: return $false
       TestScript: return $false
    ########################################
    ### Configure gsudo
    ### -------------------------------------
    - resource: PSDscResources/Script
      id: gsudoconfig
      dependsOn:
        - gsudo
      directives:
        description: Configure gsudo
      settings:
        SetScript: |
          gsudo --install
        GetScript: return $false
        TestScript: return $false
    